{"version":3,"sources":["../../../../../React Repositories/gamanza-test/src/components/organisms/MainMenu.jsx","../../../../../React Repositories/gamanza-test/src/components/organisms/Banner.jsx","../../../../../React Repositories/gamanza-test/src/components/molecules/DeathsCard.jsx","../../../../../React Repositories/gamanza-test/src/components/organisms/DeathsCardsGrid.jsx","../../../../../React Repositories/gamanza-test/src/components/molecules/CharacterCard.jsx","../../../../../React Repositories/gamanza-test/src/components/organisms/CharterCardsGrid.jsx","../../../../../React Repositories/gamanza-test/src/components/pages/Home.jsx","../../../../../React Repositories/gamanza-test/src/components/molecules/EpisodesCard.jsx","../../../../../React Repositories/gamanza-test/src/components/organisms/EpisodesCardsGrid.jsx","../../../../../React Repositories/gamanza-test/src/components/pages/Episodes.jsx","../../../../../React Repositories/gamanza-test/src/components/AppRoutes.jsx","../../../../../React Repositories/gamanza-test/src/components/App.jsx","../../../../../React Repositories/gamanza-test/src/serviceWorker.js","../../../../../React Repositories/gamanza-test/src/index.js"],"names":["menu","createRef","MainMenu","react_default","a","createElement","className","src","alt","ref","react_router_dom","exact","to","activeClassName","id","onClick","current","classList","toggle","Banner","type","placeholder","DeathsCard","_ref","death","defaultProps","title","image","DeathsCardsGrid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","deaths","_this2","axios","get","then","resp","setState","data","slice","Fragment","map","u","molecules_DeathsCard","key","Component","CharterCard","char_id","name","img","CharterCardsGrid","chaters","CharacterCard","Home","organisms_CharterCardsGrid","organisms_DeathsCardsGrid","EpisodesCard","EpisodesCardsGrid","episodes","molecules_EpisodesCard","Episodes","organisms_EpisodesCardsGrid","AppRoutes","organisms_MainMenu","organisms_Banner","react_router","path","component","App","components_AppRoutes","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1633720.chunk.js","sourcesContent":["import React, {createRef} from 'react'\nimport {NavLink} from \"react-router-dom\"\n\nconst menu = createRef();\nconst toggleMenu = ()=> menu.current.classList.toggle('show');\n\nconst MainMenu = () => (\n    <header className=\"main-header\">\n        <div className=\"ed-grid s-grid-5 lg-grid-4\">\n            <div className=\"s-cols-4 lg-cols-1 s-cross-center\">\n                <img className=\"main-logo\" src=\"img/logo.png\" alt=\"logo\" />\n            </div>\n            <div className=\"s-grid-1 lg-cols-3 s-cross-center s-main-end header-links\">\n                <nav className=\"main-menu\" ref={menu}>\n                    <ul>\n                        <li>\n                            <NavLink exact to =\"/\" activeClassName=\"activo\">Home</NavLink>\n                        </li>\n                        <li>\n                            <NavLink to =\"/Episodes\" activeClassName=\"activo\">Episodes</NavLink>\n                        </li>\n                    </ul>\n                </nav>\n                <div className=\"main-menu-toggle to-l\"\n                     id=\"main-menu-toggle\"\n                     onClick={\n                         () => toggleMenu()\n                     }\n                >\n                </div>\n            </div>\n        </div>\n    </header>\n);\n\nexport default MainMenu","import React from 'react';\n\nconst Banner = () =>(\n    <div className=\"main-banner img-container diagonal l-section\" id=\"main-banner\">\n        <div className=\"ed-grid lg-grid-6\">\n            <div className=\"lg-cols-4 lg-x-2\">\n                <img className=\"main-banner__img\" src=\"img/banner-img1.png\" alt=\"alt-Banner\"/>\n                <div className=\"main-banner__data s-center\">\n                    <p className=\"t2 s-mb-0\">Gamanza 2020</p>\n                    <p>The iGaming Super Store</p>\n                    <input className=\"nav-input\" type=\"text\" placeholder=\"Explore Products\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Banner;","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst DeathsCard =({id, death}) =>(\n    <article className=\"card\" id={id}>\n        <div className=\"card__data s-border s-radius-br s-radius-bl s-pxy-2\">\n            <h3 className=\"t5 s-mb-2 s-center\">{death}</h3>\n        </div>\n    </article>\n);\n\nDeathsCard.propTypes = {\n    title           : PropTypes.string,\n    image           : PropTypes.string\n};\n\nDeathsCard.defaultProps = {\n    title           : \"No titles\",\n    image           : \"https://scott88lee.github.io/FMX/img/avatar.jpg\"\n};\n\n\n\n\n\nexport default DeathsCard","import React, { Component } from \"react\"\nimport DeathsCard from \"../molecules/DeathsCard\"\nimport axios from \"axios\"\nclass DeathsCardsGrid extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            deaths: []\n        }\n    }\n    componentDidMount(){\n        axios.get('https://breakingbadapi.com/api/deaths?limit=6&offset=0')\n            .then(resp =>{\n                const limit = 6;\n                this.setState({\n                    deaths: resp.data.slice(0, limit)\n                })\n            })\n    }\n    render(){\n        const { deaths } = this.state;\n        return(\n            <>\n            {\n                deaths.map(\n                    u => (\n                        <DeathsCard\n                            key     = {u.id}\n                            death   = {u.death}\n                        />\n                    ))\n            }\n            </>\n        )\n    }\n}\n\nexport default DeathsCardsGrid","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst CharterCard =({char_id, name, img}) =>(\n    <article className=\"card\" id={char_id}>\n        <div className=\"img-container s-ratio-16-9 s-radius-tr s-radius-tl\">\n            <img src={img} alt={name} />\n        </div>\n        <div className=\"card__data s-border s-radius-br s-radius-bl s-pxy-2\">\n            <h3 className=\"t5 s-mb-2 s-center\">{name}</h3>\n        </div>\n    </article>\n);\n\nCharterCard.propTypes = {\n    name           : PropTypes.string,\n    img           : PropTypes.string\n};\n\nCharterCard.defaultProps = {\n    name           : \"No titles\",\n    img           : \"No Image\"\n};\n\n\nexport default CharterCard","import React, { Component } from \"react\"\nimport CharacterCard from \"../molecules/CharacterCard\"\nimport axios from \"axios\"\nclass CharterCardsGrid extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            chaters: []\n        }\n    }\n    componentDidMount(){\n        axios.get('https://breakingbadapi.com/api/characters?limit=6&offset=0')\n        // .then(resp => console.log(resp.data))\n            .then(resp =>{\n                this.setState({\n                    chaters: resp.data\n                })\n            })\n    }\n    render(){\n        const { chaters } = this.state;\n        return(\n            <>\n            {\n                chaters.map(\n                    u => (\n                    <CharacterCard\n                        key         = {u.id}\n                        name        = {u.name}\n                        img    = {u.img}\n                    />\n                ))\n            }\n            </>\n        )\n    }\n}\n\nexport default CharterCardsGrid","import React from 'react';\nimport DeathsCardsGrid from '../organisms/DeathsCardsGrid'\nimport CharterCardsGrid from '../organisms/CharterCardsGrid'\n\n\n\nconst Home = ()=> (\n    <>\n        <div className=\"ed-grid\">\n            <h1>Home</h1>\n        </div>\n    <div className=\"ed-container\">\n        <div className=\"ed-item m-60\">\n            <div className=\"ed-grid s-grid-1 m-grid-2 l-grid-3\">\n              <CharterCardsGrid/>\n            </div>\n        </div>\n        <div className=\"ed-item m-40\">\n            <div className=\"ed-grid s-grid-1\">\n               <DeathsCardsGrid/>\n            </div>\n        </div>\n    </div>\n    </>\n);\nexport default Home;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst EpisodesCard =({id, title}) =>(\n    <article className=\"card\" id={title}>\n        <div className=\"card__data s-border s-radius-br s-radius-bl s-pxy-2\">\n            <h3 className=\"t5 s-mb-2 s-center\">{title}</h3>\n        </div>\n    </article>\n);\n\nEpisodesCard.propTypes = {\n    title           : PropTypes.string,\n};\n\nEpisodesCard.defaultProps = {\n    title           : \"No titles\",\n};\n\n\n\n\n\nexport default EpisodesCard","import React, { Component } from \"react\"\nimport EpisodesCard from \"../molecules/EpisodesCard\"\nimport axios from \"axios\"\nclass EpisodesCardsGrid extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            episodes: []\n        }\n    }\n    componentDidMount(){\n        axios.get('https://breakingbadapi.com/api/episodes')\n            .then(resp =>{\n                const limit = 6;\n                this.setState({\n                    episodes: resp.data.slice(0, limit)\n                })\n            })\n    }\n    render(){\n        const { episodes } = this.state;\n        return(\n            <>\n            {\n                episodes.map(\n                    u => (\n                        <EpisodesCard\n                            key     = {u.id}\n                            title   = {u.title}\n                        />\n                    ))\n            }\n            </>\n        )\n    }\n}\n\nexport default EpisodesCardsGrid","import React from 'react';\nimport EpisodesCardsGrid from \"../organisms/EpisodesCardsGrid\"\n\nconst Episodes = () => (\n    <>\n        <div className=\"ed-grid\">\n            <h1>Episodes</h1>\n        </div>\n        <div className=\"ed-grid s-grid-1 m-grid-2 l-grid-3\">\n            <EpisodesCardsGrid/>\n        </div>\n    </>\n);\nexport default Episodes;\n","import React from \"react\"\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Mainmenu from './organisms/MainMenu'\nimport Banner from './organisms/Banner'\nimport Home from \"../components/pages/Home\"\nimport Episodes from \"../components/pages/Episodes\"\n\nconst AppRoutes = () => (\n    <Router>\n        <Mainmenu/>\n        <Banner/>\n        <Switch>\n            <Route path = \"/\" exact component={Home}/>\n            <Route path = \"/Episodes\" exact component={Episodes}/>\n            <Route component={() => (\n                <div className=\"ed-grid\">\n                    <h1>Página no encontrada</h1>\n                </div>\n            )}/>\n        </Switch>\n    </Router>\n\n);\n\nexport default AppRoutes;","import React from 'react';\nimport AppRoutes from \"./AppRoutes\"\nimport '../styles/styles.scss';\n\nconst App = ()=> (\n    <AppRoutes/>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}